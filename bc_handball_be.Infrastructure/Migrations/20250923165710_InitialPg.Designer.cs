// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using bc_handball_be.Infrastructure.Persistence;

#nullable disable

namespace bc_handball_be.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250923165710_InitialPg")]
    partial class InitialPg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.ClubAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClubId")
                        .IsUnique();

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("ClubAdmin", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<char>("License")
                        .HasColumnType("character(1)");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Coach", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("GoalCount")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<int>("RedCardCount")
                        .HasColumnType("integer");

                    b.Property<int>("SevenMeterGoalCount")
                        .HasColumnType("integer");

                    b.Property<int>("SevenMeterMissCount")
                        .HasColumnType("integer");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int>("TwoMinPenaltyCount")
                        .HasColumnType("integer");

                    b.Property<int>("YellowCardCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PersonId");

                    b.HasIndex("TeamId");

                    b.ToTable("Player", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Recorder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Recorder", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Referee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<char>("License")
                        .HasColumnType("character(1)");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Referee", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.super.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TournamentInstanceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TournamentInstanceId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsPlaceholder")
                        .HasColumnType("boolean");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Club", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("MatchId");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int?>("FinalGroup")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phase")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Lineup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MatchId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("TeamId");

                    b.ToTable("Lineup", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.LineupPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LineupId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LineupId");

                    b.HasIndex("PlayerId");

                    b.ToTable("LineupPlayer", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Login", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssistantRefereeId")
                        .HasColumnType("integer");

                    b.Property<int?>("AwayScore")
                        .HasColumnType("integer");

                    b.Property<int?>("AwayTeamId")
                        .HasColumnType("integer");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int?>("HomeScore")
                        .HasColumnType("integer");

                    b.Property<int?>("HomeTeamId")
                        .HasColumnType("integer");

                    b.Property<int?>("MainRefereeId")
                        .HasColumnType("integer");

                    b.Property<string>("Playground")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SequenceNumber")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TimePlayed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AssistantRefereeId");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("GroupId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("MainRefereeId");

                    b.ToTable("Match", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("ClubId")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsPlaceholder")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TournamentInstanceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ClubId");

                    b.HasIndex("TournamentInstanceId");

                    b.ToTable("Team", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.TeamGroup", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.HasKey("TeamId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("TeamGroup", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tournament", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.TournamentInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EditionNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TournamentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("TournamentInstance", (string)null);
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Admin", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Actors.super.Person", "Person")
                        .WithOne()
                        .HasForeignKey("bc_handball_be.Core.Entities.Actors.sub.Admin", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.ClubAdmin", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Club", "Club")
                        .WithOne("ClubAdmin")
                        .HasForeignKey("bc_handball_be.Core.Entities.Actors.sub.ClubAdmin", "ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Actors.super.Person", "Person")
                        .WithOne()
                        .HasForeignKey("bc_handball_be.Core.Entities.Actors.sub.ClubAdmin", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Coach", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Actors.super.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Team", "Team")
                        .WithOne("Coach")
                        .HasForeignKey("bc_handball_be.Core.Entities.Actors.sub.Coach", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Player", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Category", "Category")
                        .WithMany("Stats")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Actors.super.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("Person");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Recorder", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Actors.super.Person", "Person")
                        .WithOne()
                        .HasForeignKey("bc_handball_be.Core.Entities.Actors.sub.Recorder", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Referee", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Actors.super.Person", "Person")
                        .WithOne()
                        .HasForeignKey("bc_handball_be.Core.Entities.Actors.sub.Referee", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Category", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.TournamentInstance", "TournamentInstance")
                        .WithMany("Categories")
                        .HasForeignKey("TournamentInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TournamentInstance");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Event", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Actors.sub.Player", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("bc_handball_be.Core.Entities.Match", "Match")
                        .WithMany("Events")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Match");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Group", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Category", "Category")
                        .WithMany("Groups")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Lineup", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Match", "Match")
                        .WithMany("Lineups")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Team", "Team")
                        .WithMany("Lineups")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.LineupPlayer", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Lineup", "Lineup")
                        .WithMany("Players")
                        .HasForeignKey("LineupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Actors.sub.Player", "Player")
                        .WithMany("LineupPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Lineup");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Login", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Actors.super.Person", "Person")
                        .WithOne("Login")
                        .HasForeignKey("bc_handball_be.Core.Entities.Login", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Match", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Actors.sub.Referee", "AssistantReferee")
                        .WithMany("AssistantRefereeMatches")
                        .HasForeignKey("AssistantRefereeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("bc_handball_be.Core.Entities.Team", "AwayTeam")
                        .WithMany("AwayMatches")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("bc_handball_be.Core.Entities.Group", "Group")
                        .WithMany("Matches")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("bc_handball_be.Core.Entities.Team", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("bc_handball_be.Core.Entities.Actors.sub.Referee", "MainReferee")
                        .WithMany("MainRefereeMatches")
                        .HasForeignKey("MainRefereeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssistantReferee");

                    b.Navigation("AwayTeam");

                    b.Navigation("Group");

                    b.Navigation("HomeTeam");

                    b.Navigation("MainReferee");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Team", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Club", "Club")
                        .WithMany("Teams")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.TournamentInstance", "TournamentInstance")
                        .WithMany("Teams")
                        .HasForeignKey("TournamentInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Club");

                    b.Navigation("TournamentInstance");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.TeamGroup", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Group", "Group")
                        .WithMany("TeamGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bc_handball_be.Core.Entities.Team", "Team")
                        .WithMany("TeamGroups")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.TournamentInstance", b =>
                {
                    b.HasOne("bc_handball_be.Core.Entities.Tournament", "Tournament")
                        .WithMany("Editions")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Player", b =>
                {
                    b.Navigation("LineupPlayers");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.sub.Referee", b =>
                {
                    b.Navigation("AssistantRefereeMatches");

                    b.Navigation("MainRefereeMatches");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Actors.super.Person", b =>
                {
                    b.Navigation("Login");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Category", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Club", b =>
                {
                    b.Navigation("ClubAdmin");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Group", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("TeamGroups");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Lineup", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Match", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Lineups");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Team", b =>
                {
                    b.Navigation("AwayMatches");

                    b.Navigation("Coach");

                    b.Navigation("HomeMatches");

                    b.Navigation("Lineups");

                    b.Navigation("Players");

                    b.Navigation("TeamGroups");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.Tournament", b =>
                {
                    b.Navigation("Editions");
                });

            modelBuilder.Entity("bc_handball_be.Core.Entities.TournamentInstance", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
